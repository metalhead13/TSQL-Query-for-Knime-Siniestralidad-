/* 
Developed By:

https://github.com/metalhead13

*/



SELECT *
FROM "cdp_ods"."sisaxis_pagosinitrami"
WHERE CTIPPAG = 2
AND CESTPAG = 1


SELECT DISTINCT DATE(A.FCAMBIO ) AS FECHA
, DATEPART(YEAR, A.FCAMBIO) AS ANHO
, DATEPART(MONTH,A.FCAMBIO) AS MES
, DATEPART(DAY, A.FCAMBIO) AS DIA
, CLF.ITASA AS UF
, EUR.ITASA AS EUR
, UD.ITASA AS DOLAR
, USD.ITASA AS USD
INTO #M_MONEDA 
FROM "cdp_ods"."sisaxis_eco_tipocambio" A
LEFT JOIN "cdp_ods"."sisaxis_eco_tipocambio" CLF
ON A.FCAMBIO = CLF.FCAMBIO
AND CLF.CMONORI = 'CLF'

LEFT JOIN "cdp_ods"."sisaxis_eco_tipocambio" EUR
ON A.FCAMBIO = EUR.FCAMBIO
AND EUR.CMONORI = 'EUR'

LEFT JOIN "cdp_ods"."sisaxis_eco_tipocambio" UD
ON A.FCAMBIO = UD.FCAMBIO
AND UD.CMONORI = 'UD'

LEFT JOIN "cdp_ods"."sisaxis_eco_tipocambio" USD
ON A.FCAMBIO = USD.FCAMBIO
AND USD.CMONORI = 'USD'
;

SELECT A.NSINIES, A.SIDEPAG, A.CTIPPAG, B.CGARANT, B.ISINRET
INTO #PAGSINGAR
FROM  "cdp_ods"."sisaxis_pagosinitrami" A
LEFT JOIN "cdp_ods"."sisaxis_pagogarantrami" B
ON A.SIDEPAG = B.SIDEPAG
WHERE CTIPPAG = 2
AND B.SIDEPAG IS NOT NULL;


SELECT
    SIN.NSINIES AS SINIESTRO,
    PAGO.NTRAMIT,
    SIN.SSEGURO  AS SSEGURO,
    SIN.CRAMO    AS RAMO,
    PAGO.FCONTAB AS FECHA,
    PAGO.CESTPAG AS ESTADO,
    PAGO.CMONSEG AS MONEDA,
    SIN.CCATAST  AS CATASTROFE,
    SIN.CCAUSIN  AS CAUSA,
    SIN.CMOTSIN  AS MOTI,
    PAGO.ISINRET AS PAGOS,
    CASE WHEN PAGO.CMONSEG IN ('UD', 'USD') 
        THEN PAGO.ISINRET * MON.DOLAR / MON.UF
        WHEN PAGO.CMONSEG = 'CLP' 
        THEN PAGO.ISINRET / MON.UF
        WHEN PAGO.CMONSEG = 'CLF' 
        THEN PAGO.ISINRET
    END AS PAGOS_UF,
    CASE WHEN PAGO.CMONSEG IN ('UD','USD') 
        THEN PAGO.ISINRET * MON.DOLAR
        WHEN PAGO.CMONSEG = 'CLP' 
        THEN PAGO.ISINRET
        WHEN PAGO.CMONSEG = 'CLF' 
        THEN PAGO.ISINRET * MON.UF
        WHEN PAGO.CMONSEG = 'EUR' 
        THEN PAGO.ISINRET * MON.EUR
    END AS PAGOS_PS,
    MON.UF,
    MON.DOLAR,
    SIN.FNOTIFI,
    S.CGARANT,
    PAGO.SIDEPAG,
    CASE WHEN SIN.FNOTIFI BETWEEN  $${SFecha_Inicial}$$ AND $${SFecha_Final}$$ --'2022-04-01' AND '2022-04-30'
        THEN 'NUEVO' 
        ELSE 'CARTERA'
    END AS CLASIFICACION,
    SIN.NMOVIMI,
    SIN.NRIESGO,
    SEG.NPOLIZA,
    SEG.NCERTIF
INTO #PAGOS
FROM cdp_ods.sisaxis_pagosinitrami AS PAGO
LEFT JOIN cdp_ods.sisaxis_siniestros AS SIN
ON SIN.NSINIES = PAGO.NSINIES
LEFT JOIN cdp_ods.sisaxis_seguros SEG
ON SIN.SSEGURO = SEG.SSEGURO
LEFT JOIN #M_MONEDA MON
ON DATEPART(YEAR, PAGO.FCONTAB) = MON.ANHO
AND DATEPART(MONTH, PAGO.FCONTAB) = MON.MES
AND DATEPART(DAY, PAGO.FCONTAB) = MON.DIA
LEFT JOIN #PAGSINGAR S
ON PAGO.NSINIES = S.NSINIES
AND PAGO.SIDEPAG = S.SIDEPAG
WHERE PAGO.FCONTAB BETWEEN $${SFecha_Inicial}$$ AND $${SFecha_Final}$$ -- '2022-04-01' AND '2022-04-30' 
AND PAGO.CTIPPAG = 2
AND PAGO.CESTPAG = 2
AND NOT EXISTS 
    (   SELECT
            ANU.SPGANUL
        FROM 
            cdp_ods.sisaxis_pagosinitrami ANU
        WHERE ANU.CTIPPAG = 3
        AND ANU.NSINIES = PAGO.NSINIES
        AND ANU.SPGANUL = PAGO.SIDEPAG 
     );
	 
	 
	 
SELECT
    SIN.NSINIES::INT AS SINIESTRO,
    RE.NTRAMIT,
    SIN.SSEGURO::INT                  AS SSEGURO,
    SIN.CRAMO                    AS RAMO,
    SIN.CCATAST                  AS CATASTROFE,
    SIN.CCAUSIN                  AS CAUSA,
    SIN.CMOTSIN                  AS MOTI,
    SIN.FENTRAD                  AS FENTRAD,
    RE.CMONRES                   AS MONEDA,
    RE.IRESERV                   AS RESER,
    DATEPART(DAY, SIN.FENTRAD)   AS DIA,
    DATEPART(MONTH, SIN.FENTRAD) AS MES,
    DATEPART(YEAR, SIN.FENTRAD)  AS ANIO,
    SIN.FSINIES,
    SIN.FNOTIFI,
    RE.CGARANT,
    CASE
        WHEN SIN.FNOTIFI BETWEEN $${SFecha_Inicial}$$ AND $${SFecha_Final}$$ -- '2022-04-01'  AND '2022-04-30'
        THEN 'NUEVO' 
        ELSE 'CARTERA'
    END AS CLASIFICACION,
    SIN.NMOVIMI,
    SIN.NRIESGO,
    SEG.NPOLIZA::INT,
    SEG.NCERTIF
INTO #PROV_RESERVA
FROM  cdp_ods.sisaxis_reservasinitrami AS RE
LEFT JOIN cdp_ods.sisaxis_siniestros AS SIN
ON SIN.NSINIES::int = RE.NSINIES::int
LEFT JOIN cdp_ods.sisaxis_seguros SEG
ON SIN.SSEGURO::int = SEG.SSEGURO::int
LEFT JOIN CDP_ODS.SISAXIS_TRAMITACIONSINI T
ON RE.NSINIES::int = T.NSINIES::int
AND RE.NTRAMIT::int = T.NTRAMIT::int
WHERE RE.FRESFIN IS NULL
AND RE.IRESERV > 0
AND T.CESTADO IN (0,4,5)
AND SIN.FNOTIFI <= $${SFecha_Final}$$;


SELECT
    SIN.NSINIES::INT AS SINIESTRO,
    PAGO.NTRAMIT,
    SIN.SSEGURO::INT                   AS SSEGURO,
    SIN.CRAMO                     AS RAMO,
    PAGO.FCONTAB                  AS FECHA,
    PAGO.CESTPAG                  AS ESTADO,
    PAGO.CMONSEG                  AS MONEDA,
    SIN.CCATAST                   AS CATASTROFE,
    SIN.CCAUSIN                   AS CAUSA,
    SIN.CMOTSIN                   AS MOTI,
    PAGO.ISINRET                  AS PAGOS,
    DATEPART(DAY, PAGO.FCONTAB)   AS DIA,
    DATEPART(MONTH, PAGO.FCONTAB) AS MES,
    DATEPART(YEAR, PAGO.FCONTAB)  AS ANIO,
    SIN.FSINIES,
    SIN.FNOTIFI,
    S.CGARANT,
    CASE
        WHEN SIN.FNOTIFI BETWEEN $${SFecha_Inicial}$$ AND $${SFecha_Final}$$ --- '2022-04-01'  AND '2022-04-30' 
        THEN 'NUEVO' 
        ELSE 'CARTERA'
    END AS CLASIFICACION,
    SIN.NMOVIMI,
    SIN.NRIESGO,
    SEG.NPOLIZA::INT,
    SEG.NCERTIF
INTO #PROV_PAGOS
FROM cdp_ods.sisaxis_pagosinitrami AS PAGO
LEFT JOIN cdp_ods.sisaxis_siniestros AS SIN
ON SIN.NSINIES::int = PAGO.NSINIES::int
LEFT JOIN cdp_ods.sisaxis_seguros SEG
ON SIN.SSEGURO::int = SEG.SSEGURO::int
LEFT JOIN CDP_ODS.SISAXIS_TRAMITACIONSINI T
ON PAGO.NSINIES::int = T.NSINIES::int
AND PAGO.NTRAMIT::int = T.NTRAMIT::int
LEFT JOIN #PAGSINGAR S
ON PAGO.NSINIES::int = S.NSINIES::int
AND PAGO.SIDEPAG= S.SIDEPAG
WHERE PAGO.CTIPPAG = 2
AND PAGO.CESTPAG = 1
AND NOT EXISTS 
    (   SELECT ANU.SPGANUL
        FROM  cdp_ods.sisaxis_pagosinitrami ANU
        WHERE ANU.CTIPPAG = 3
        AND ANU.NSINIES::int = PAGO.NSINIES::int
        AND ANU.SPGANUL = PAGO.SIDEPAG )
AND T.CESTADO IN (0,4,5);



SELECT
    A.SINIESTRO,
    NTRAMIT,
    A.SSEGURO,
    A.RAMO,
    A.CATASTROFE,
    A.CAUSA,
    A.MOTI,
    A.FENTRAD AS FECHA,
    A.MONEDA,
    A.RESER AS RESER,
    CASE
        WHEN A.MONEDA IN ('UD','USD') 
        THEN A.RESER / MON.UF * MON.DOLAR
        WHEN A.MONEDA IN ('EUR') 
        THEN A.RESER / MON.UF * MON.EUR
        WHEN A.MONEDA IN ('CLP') 
        THEN A.RESER / MON.UF
        WHEN A.MONEDA IN ('CLF') 
        THEN A.RESER
        END AS PROVISION_UF,
    CASE
        WHEN A.MONEDA IN ('UD','USD') 
        THEN A.RESER * MON.DOLAR
        WHEN A.MONEDA IN ('EUR') 
        THEN A.RESER * MON.EUR
        WHEN A.MONEDA IN ('CLP') 
        THEN A.RESER
        WHEN A.MONEDA IN ('CLF') 
        THEN A.RESER * MON.UF
        END AS PROVISION_PS,
    A.DIA,
    A.MES,
    A.ANIO,
    A.FSINIES,
    A.FNOTIFI,
    A.CGARANT,
    A.CLASIFICACION,
    A.NMOVIMI,
    A.NRIESGO,
    A.NPOLIZA,
    A.NCERTIF
INTO #PROV_AGRUP
FROM #PROV_RESERVA A
LEFT JOIN #M_MONEDA MON
ON DATEPART( YEAR,  getdate() ) = MON.ANHO
AND DATEPART( MONTH, getdate() ) = MON.MES
AND DATEPART( DAY,   getdate() ) = MON.DIA ;


INSERT INTO 
    #PROV_AGRUP
SELECT
    B.SINIESTRO,
    NTRAMIT,
    B.SSEGURO,
    B.RAMO,
    B.CATASTROFE,
    B.CAUSA,
    B.MOTI,
    B.FECHA AS FECHA,
    B.MONEDA,
    B.PAGOS AS RESER,
    CASE WHEN B.MONEDA IN ('UD', 'USD') 
        THEN B.PAGOS / MON.UF * MON.DOLAR
        WHEN B.MONEDA IN ('EUR') 
        THEN B.PAGOS / MON.UF * MON.EUR
        WHEN B.MONEDA IN ('CLP') 
        THEN B.PAGOS / MON.UF
        WHEN B.MONEDA IN ('CLF') 
        THEN B.PAGOS
        END AS PROVISION_UF,
    CASE
        WHEN B.MONEDA IN ('UD', 'USD') 
        THEN B.PAGOS * MON.DOLAR
        WHEN B.MONEDA IN ('EUR') 
        THEN B.PAGOS * MON.EUR
        WHEN B.MONEDA IN ('CLP') 
        THEN B.PAGOS
        WHEN B.MONEDA IN ('CLF') 
        THEN B.PAGOS * MON.UF
        END AS PROVISION_PS,
    B.DIA,
    B.MES,
    B.ANIO,
    B.FSINIES,
    B.FNOTIFI,
    B.CGARANT,
    B.CLASIFICACION,
    B.NMOVIMI,
    B.NRIESGO,
    B.NPOLIZA,
    B.NCERTIF
FROM #PROV_PAGOS B
LEFT JOIN #M_MONEDA MON
ON DATEPART( YEAR,  getdate() ) = MON.ANHO
AND DATEPART( MONTH, getdate() ) = MON.MES
AND DATEPART( DAY,   getdate() ) = MON.DIA;


SELECT
    SINIESTRO,
    NTRAMIT,
    SSEGURO,
    RAMO,
    CATASTROFE,
    CAUSA,
    MOTI,
    FECHA,
    MONEDA,
    SUM(RESER)        AS RESER,
    SUM(PROVISION_UF) AS PROVISION_UF,
    SUM(PROVISION_PS) AS PROVISION_PS,
    DIA,
    MES,
    ANIO,
    FNOTIFI,
    CGARANT,
    CLASIFICACION,
    NMOVIMI,
    NRIESGO,
    NPOLIZA,
    NCERTIF,
    FSINIES
INTO #PROV_FINAL
FROM #PROV_AGRUP
GROUP BY 1,2,3,4,5,6,7,8,9,13,14,15,16,17,18,19,20,21,22,23;



SELECT
    SIN.NSINIES AS SINIESTRO,
    PAGO.NTRAMIT,
    SIN.SSEGURO  AS SSEGURO,
    SIN.CRAMO    AS RAMO,
    PAGO.FCONTAB AS FECHA,
    PAGO.CESTPAG AS ESTADO,
    PAGO.CMONSEG AS MONEDA,
    SIN.CCATAST  AS CATASTROFE,
    SIN.CCAUSIN  AS CAUSA,
    SIN.CMOTSIN  AS MOTI,
    PAGO.ISINRET AS PAGOS,
    CASE
        WHEN PAGO.CMONSEG IN ('UD', 'USD') 
        THEN PAGO.ISINRET * MON.DOLAR / MON.UF
        WHEN PAGO.CMONSEG = 'CLP' 
        THEN PAGO.ISINRET / MON.UF
        WHEN PAGO.CMONSEG = 'CLF' 
        THEN PAGO.ISINRET
    END AS PAGOS_UF,
    CASE
        WHEN PAGO.CMONSEG IN ('UD', 
                              'USD') 
        THEN PAGO.ISINRET * MON.DOLAR
        WHEN PAGO.CMONSEG = 'CLP' 
        THEN PAGO.ISINRET
        WHEN PAGO.CMONSEG = 'CLF' 
        THEN PAGO.ISINRET * MON.UF
        WHEN PAGO.CMONSEG = 'EUR' 
        THEN PAGO.ISINRET * MON.EUR
    END                           AS PAGOS_PS,
    DATEPART(DAY, PAGO.FCONTAB)   AS DIA,
    DATEPART(MONTH, PAGO.FCONTAB) AS MES,
    DATEPART(YEAR, PAGO.FCONTAB)  AS ANIO,
    SIN.FNOTIFI,
    S.CGARANT,
    CASE
        WHEN SIN.FNOTIFI BETWEEN $${SFecha_Inicial}$$ AND $${SFecha_Final}$$--'2022-04-01'  AND '2022-04-30' 
        THEN 'NUEVO' 
        ELSE 'CARTERA'
    END AS CLASIFICACION,
    SIN.NMOVIMI,
    SIN.NRIESGO,
    SEG.NPOLIZA,
    SEG.NCERTIF
INTO #RECUPEROS
FROM cdp_ods.sisaxis_pagosinitrami PAGO
LEFT JOIN cdp_ods.sisaxis_siniestros SIN
ON SIN.NSINIES = PAGO.NSINIES
LEFT JOIN cdp_ods.sisaxis_seguros SEG
ON SIN.SSEGURO = SEG.SSEGURO
LEFT JOIN #PAGSINGAR S
ON PAGO.NSINIES = S.NSINIES
AND PAGO.SIDEPAG = S.SIDEPAG
LEFT JOIN #M_MONEDA MON
ON DATEPART(YEAR, PAGO.FCONTAB) = MON.ANHO
AND DATEPART(MONTH, PAGO.FCONTAB) = MON.MES
AND DATEPART(DAY, PAGO.FCONTAB) = MON.DIA
WHERE PAGO.CTIPPAG = 7
AND PAGO.CESTPAG = 2
AND PAGO.FCONTAB BETWEEN $${SFecha_Inicial}$$ AND $${SFecha_Final}$$ --'2022-04-01'  AND '2022-04-30' 
AND NOT EXISTS 
    (   SELECT ANU.SPGANUL
        FROM cdp_ods.sisaxis_pagosinitrami ANU
        WHERE ANU.CTIPPAG = 3
        AND ANU.NSINIES = PAGO.NSINIES
        AND ANU.SPGANUL = PAGO.SIDEPAG ) 
		
		
SELECT
    DISTINCT CIE_PER_CON,
    CIE_NUM_SIN,
    CIE_NTRAMIT,
    CIE_SSEGURO,
    CIE_COD_COB,
    CIE_NPOLIZA,
    CIE_NCERTIF,
    CIE_NRIESGO,
    CIE_NUM_SIN::int||'_'||CIE_SSEGURO::int||'_'||CIE_COD_COB::int AS COD,
    CASE WHEN (100 - CIE_POR_PAR) =0 THEN 0 ELSE CIE_POR_FAC / (100 - CIE_POR_PAR) * 100  END AS CIE_POR_FAC,
    CASE WHEN (100 - CIE_POR_PAR)=0 THEN 0 ELSE CIE_POR_RET_DIR /(100 - CIE_POR_PAR) * 100 END  AS CIE_POR_RET_DIR,
    CASE WHEN 100 - CIE_POR_PAR=0 THEN 0 ELSE CIE_POR_RET_74 /(100 - CIE_POR_PAR) * 100 END          AS CIE_POR_RET_74,
    CIE_POR_PAR,
    CASE WHEN 100 - CIE_POR_PAR= 0 THEN 0 ELSE CIE_POR_CNT /(100 - CIE_POR_PAR)* 100 END AS CIE_POR_CNT,
    CASE WHEN 100 - CIE_POR_PAR=0 THEN 0 ELSE CIE_CTAPAR_CED /(100 - CIE_POR_PAR)* 100 END AS CIE_CTAPAR_CED,
    CASE WHEN 100 - CIE_POR_PAR=0 THEN 0 ELSE CIE_CTAPAR_RET /(100 - CIE_POR_PAR)* 100 END AS CIE_CTAPAR_RET,
    CASE WHEN 100 - CIE_POR_PAR=0 THEN 0 ELSE CIE_EXE1 /(100 - CIE_POR_PAR)* 100 END  AS CIE_EXE1,
    CASE WHEN 100 - CIE_POR_PAR=0 THEN 0 ELSE CIE_EXE2 /(100 - CIE_POR_PAR)* 100  END  AS CIE_EXE2,
    CIE_SCONTRA
INTO #CIERRE_REA_X
FROM cdp_ods.siscierres_sin_ciemen_tbl
WHERE CIE_TIP_PRO IN (1,2,3)
AND CIE_PER_CON NOT IN (99991231, 99981231)
ORDER BY CIE_PER_CON DESC, CIE_NUM_SIN||'_'||CIE_SSEGURO||'_'||CIE_COD_COB ASC;


SELECT
cie_per_con,
cie_num_sin,	
cie_ntramit	,
cie_sseguro	,
cie_cod_cob	,
cie_npoliza	,
cie_ncertif	,
cie_nriesgo	,
cod	,
cie_por_fac,	
cie_por_ret_dir,	
cie_por_ret_74,	
cie_por_par	,
cie_por_cnt	,
cie_ctapar_ced,	
cie_ctapar_ret	,
cie_exe1	,
cie_exe2	,
cie_scontra,
ROW_NUMBER() OVER(PARTITION BY COD ORDER BY CIE_PER_CON DESC) AS COUNT
INTO #CIERRE_REA_ROW
FROM #CIERRE_REA_X
ORDER BY CIE_PER_CON DESC;



SELECT * 
INTO #CONTA_REASG
FROM #CIERRE_REA_ROW
WHERE COUNT = 1;



SELECT
    B.NSINIES AS SINIESTRO,
    B.SSEGURO,
    CASE
        WHEN A.SCONTRA IS NULL 
        THEN C.CIE_SCONTRA 
        ELSE A.SCONTRA
    END AS SCONTRA,
    CASE
        WHEN A.CGARANT IS NULL 
        THEN C.CIE_COD_COB 
        ELSE A.CGARANT
    END AS CGARANT
INTO #CONT_GARANT
FROM cdp_ods.sisaxis_siniestros B
LEFT JOIN cdp_ods.sisaxis_garancontra A
ON A.SSEGURO = B.SSEGURO
AND A.NMOVIMI = B.NMOVIMI
LEFT JOIN #CONTA_REASG C
ON B.NSINIES = C.CIE_NUM_SIN
AND B.SSEGURO = C.CIE_SSEGURO
AND C.CIE_COD_COB NOT IN (9999, 9998)
GROUP BY B.NSINIES, B.SSEGURO, A.SCONTRA, A.CGARANT, C.CIE_SCONTRA, C.CIE_COD_COB




SELECT
    A.SINIESTRO::int,
    A.NTRAMIT,
    A.SSEGURO::INT,
    A.RAMO,
    A.CGARANT,
    A.NMOVIMI,
    A.NRIESGO,
    A.NPOLIZA::INT,
    A.NCERTIF
INTO #SEG_CONTRA_X
FROM #PAGOS A
UNION
SELECT
    B.SINIESTRO::INT,
    B.NTRAMIT,
    B.SSEGURO::INT,
    B.RAMO,
    B.CGARANT,
    B.NMOVIMI,
    B.NRIESGO,
    B.NPOLIZA::INT,
    B.NCERTIF
FROM #PROV_FINAL B
UNION
SELECT
    C.SINIESTRO::INT,
    C.NTRAMIT,
    C.SSEGURO::INT,
    C.RAMO,
    C.CGARANT,
    C.NMOVIMI,
    C.NRIESGO,
    C.NPOLIZA::INT,
    C.NCERTIF
FROM #RECUPEROS C ;


SELECT
    DISTINCT A.SINIESTRO::INT,
    A.SSEGURO::INT,
    A.RAMO,
    A.CGARANT,
    A.NMOVIMI,
    A.NRIESGO,
    A.NPOLIZA::INT,
    A.NCERTIF
INTO #SEG_CONTRA_TEST
FROM #SEG_CONTRA_X A ;


SELECT
    DISTINCT A.SINIESTRO::INT,
    A.SSEGURO::INT,
    A.RAMO,
    A.CGARANT,
    A.NMOVIMI,
    A.NRIESGO,
    A.NPOLIZA::INT,
    A.NCERTIF,
    CASE
        WHEN B.SCONTRA IS NULL
        OR  B.SCONTRA IS NULL
        OR  B.SCONTRA = 0 
        THEN C.CIE_SCONTRA 
        ELSE B.SCONTRA
    END AS SCONTRA
INTO #SEG_CONTRA
FROM #SEG_CONTRA_X A
LEFT JOIN #CONT_GARANT B
ON A.SINIESTRO = B.SINIESTRO
AND A.SSEGURO = B.SSEGURO
AND A.CGARANT = B.CGARANT
LEFT JOIN #CONTA_REASG C
ON A.SINIESTRO = C.CIE_NUM_SIN
AND A.SSEGURO = C.CIE_SSEGURO
AND A.CGARANT = C.CIE_COD_COB; 


SELECT
    DISTINCT SINIESTRO::INT,
    SSEGURO::INT,
    RAMO,
    NMOVIMI,
    NRIESGO,
    NPOLIZA::INT,
    NCERTIF,
    SCONTRA
INTO #SEG_CONTRA_GN
FROM #SEG_CONTRA A
WHERE SCONTRA IS NOT NULL OR SCONTRA <> 0
ORDER BY SINIESTRO, SCONTRA;


SELECT
    B.NSINIES AS SINIESTRO,
    A.SSEGURO,
    A.SCONTRA,
    A.NRIESGO,
    A.CTRAMO,
    MAX(A.NMOVIMI) AS NMOVIMI
INTO #MAX_CESION
FROM cdp_ods.sisaxis_cesionesrea A
LEFT JOIN cdp_ods.sisaxis_siniestros B
ON A.SSEGURO = B.SSEGURO
AND A.NRIESGO = B.NRIESGO
WHERE A.NMOVIMI IS NOT NULL
AND TRUNC(B.FSINIES) BETWEEN TRUNC(A.FEFECTO) AND 
    CASE
        WHEN A.FVENCIM IS NULL 
        THEN getdate() 
        ELSE TRUNC(A.FVENCIM)
    END
GROUP BY A.SSEGURO, A.SCONTRA, A.NRIESGO, A.CTRAMO, b.nsinies;



SELECT
    SINIESTRO,
    SSEGURO,
    SCONTRA,
    NRIESGO,
    MAX(NMOVIMI) AS NMOVIMI
INTO #MAX_CESION_CT
FROM #MAX_CESION
GROUP BY SINIESTRO,
    SSEGURO,
    SCONTRA,
    NRIESGO ;


SELECT
    DISTINCT A.SINIESTRO,
    B.SSEGURO,
    B.SCONTRA,
    B.CTRAMO,
    B.NRIESGO,
    B.PCESION,
    B.PCUOPAR,
    A.NMOVIMI
INTO #CESIONES_V2
FROM 
    #MAX_CESION A
INNER JOIN 
    cdp_ods.sisaxis_cesionesrea B
ON 
    A.SSEGURO = B.SSEGURO
AND A.SCONTRA = B.SCONTRA
AND A.CTRAMO = B.CTRAMO
AND A.NMOVIMI = B.NMOVIMI
AND A.NRIESGO = B.NRIESGO;



SELECT
    DISTINCT A.SINIESTRO,
    A.SSEGURO,
    A.SCONTRA,
    A.CTRAMO,
    A.NRIESGO,
    SUM(A.PCESION) AS PCESION,
    CASE
        WHEN A.CTRAMO = 1
        AND A.PCUOPAR IS NULL 
        THEN 100 
        ELSE A.PCUOPAR
    END AS PCUOPAR,
    A.NMOVIMI
INTO #CESIONES
FROM 
    #CESIONES_V2 A
INNER JOIN 
    #MAX_CESION_CT CT
ON 
    A.SSEGURO = CT.SSEGURO
AND A.SCONTRA = CT.SCONTRA
AND A.NMOVIMI = CT.NMOVIMI
AND A.NRIESGO = CT.NRIESGO
AND A.SINIESTRO = CT.SINIESTRO
GROUP BY 1, 2, 3, 4, 5, 7,8;



SELECT DISTINCT A.SINIESTRO,
    A.SSEGURO,
    A.SCONTRA,
    A.CTRAMO,
    A.NRIESGO,
    A.PCESION,
    A.PCUOPAR,
    A.NMOVIMI
INTO #CESIONES_CONTRA
FROM #CESIONES A;


SELECT 
    A.*,
    REA.SCONTRA       AS COD_CONTRATO,
    UPPER(D.TCONTRA) AS CONTRATO,
    B.PLOCCOA         AS PORC_COASEGURO_RET,
    (100 - B.PLOCCOA) AS PORC_COASEGURO_CED,
    CASE
        WHEN REA.CTRAMO IS NULL 
        THEN 99 
        ELSE REA.CTRAMO
    END AS CODIGO_REASEGURO,
    CASE
        WHEN REA.CTRAMO IS NULL 
        THEN 'RETENCION DIRECTA' 
        ELSE UPPER(T.TATRIBU)
    END AS TIPO_REASEGURO,
    CASE
        WHEN REA.CTRAMO IS NULL 
        THEN B.PLOCCOA 
        ELSE REA.PCESION
    END AS PCESION,
    CASE
        WHEN REA.PCUOPAR IS NULL 
        THEN 0 
        ELSE REA.PCUOPAR
    END AS PCUOPAR
INTO #SEG_CONTRA_FINAL_FULL
FROM  #SEG_CONTRA A
LEFT JOIN #COACUADRO B
ON  A.SSEGURO = B.SSEGURO
LEFT JOIN #CESIONES REA
ON A.SSEGURO = REA.SSEGURO
AND A.SINIESTRO = REA.SINIESTRO
AND A.NRIESGO = REA.NRIESGO
AND A.SCONTRA = REA.SCONTRA
LEFT JOIN  cdp_ods.sisaxis_contratos D
ON A.SCONTRA = D.SCONTRA
LEFT JOIN cdp_ods.sisaxis_detvalores T
ON T.CVALOR = 105
AND T.CATRIBU = REA.CTRAMO 
ORDER BY SSEGURO ASC 


SELECT DISTINCT *
INTO #SEG_CONTRA_FINAL
FROM #SEG_CONTRA_FINAL_FULL
ORDER BY SSEGURO ASC;



SELECT
    DISTINCT SSEGURO,
    CASE
        WHEN PORC_COASEGURO_RET IS NULL
        AND PORC_COASEGURO_CED IS NULL 
        THEN 100
        WHEN PORC_COASEGURO_RET IS NULL 
        THEN 0 
        ELSE PORC_COASEGURO_RET
    END AS PORC_COASEGURO_RET,
    CASE
        WHEN PORC_COASEGURO_RET IS NULL
        AND PORC_COASEGURO_CED IS NULL 
        THEN 0
        WHEN PORC_COASEGURO_CED IS NULL 
        THEN 0 
        ELSE PORC_COASEGURO_CED
    END AS PORC_COASEGURO_CED
INTO #COASEGURO
FROM 
    #SEG_CONTRA_FINAL
ORDER BY
    SSEGURO ASC
	
	
SELECT
    A.*,
    COA.PORC_COASEGURO_RET,
    COA.PORC_COASEGURO_CED,
    CASE
        WHEN C.PCESION IS NULL 
        THEN 0 
        ELSE C.PCESION
    END + 
    CASE
        WHEN C0.PCESION IS NULL 
        THEN 0 
        ELSE C0.PCESION
    END AS RET_DIRECTA,
    CASE
        WHEN D.PCESION IS NULL 
        THEN 0 
        ELSE D.PCESION
    END AS RET_74,
    CASE
        WHEN B.PCESION IS NOT NULL
        AND B.PCUOPAR IS NOT NULL 
        THEN B.PCESION * B.PCUOPAR / 100 
        ELSE 0
    END AS CNT_RET,
    CASE
        WHEN B.PCESION IS NOT NULL
        AND B.PCUOPAR IS NOT NULL 
        THEN B.PCESION *(1 - B.PCUOPAR / 100) 
        ELSE 0
    END AS CNT_CED,
    CASE
        WHEN F.PCESION IS NULL 
        THEN 0 
        ELSE F.PCESION
    END AS PORC_FACUL,
    CASE
        WHEN E.PCESION IS NULL 
        THEN 0 
        ELSE E.PCESION
    END AS PORC_EXE1,
    CASE
        WHEN C.PCESION IS NULL 
        THEN 0 
        ELSE C.PCESION
    END + 
    CASE
        WHEN C0.PCESION IS NULL 
        THEN 0 
        ELSE C0.PCESION
    END + 
    CASE
        WHEN D.PCESION IS NULL 
        THEN 0 
        ELSE D.PCESION
    END + 
    CASE
        WHEN B.PCESION IS NOT NULL
        AND B.PCUOPAR IS NOT NULL 
        THEN B.PCESION * B.PCUOPAR / 100 
        ELSE 0
    END + 
    CASE
        WHEN B.PCESION IS NOT NULL
        AND B.PCUOPAR IS NOT NULL 
        THEN B.PCESION *(1 - B.PCUOPAR / 100) 
        ELSE 0
    END + 
    CASE
        WHEN F.PCESION IS NULL 
        THEN 0 
        ELSE F.PCESION
    END + 
    CASE
        WHEN E.PCESION IS NULL 
        THEN 0 
        ELSE E.PCESION
    END AS VALIDADOR
INTO #TRAN_TEST 
FROM 
    #PROV_FINAL A
LEFT JOIN #COASEGURO COA
ON A.SSEGURO = COA.SSEGURO
LEFT JOIN #SEG_CONTRA_FINAL B
ON A.SSEGURO = B.SSEGURO
AND A.CGARANT = B.CGARANT
AND A.SINIESTRO = B.SINIESTRO
AND B.CODIGO_REASEGURO = 1
LEFT JOIN #SEG_CONTRA_FINAL C0
ON A.SSEGURO = C0.SSEGURO
AND A.CGARANT = C0.CGARANT
AND A.SINIESTRO = C0.SINIESTRO
AND C0.CODIGO_REASEGURO = 0
LEFT JOIN #SEG_CONTRA_FINAL C
ON A.SSEGURO = C.SSEGURO
AND A.CGARANT = C.CGARANT
AND A.SINIESTRO = C.SINIESTRO
AND C.CODIGO_REASEGURO = 16
LEFT JOIN #SEG_CONTRA_FINAL D
ON A.SSEGURO = D.SSEGURO
AND A.CGARANT = D.CGARANT
AND A.SINIESTRO = D.SINIESTRO
AND D.CODIGO_REASEGURO = 17
LEFT JOIN #SEG_CONTRA_FINAL E
ON A.SSEGURO = E.SSEGURO
AND A.CGARANT = E.CGARANT
AND A.SINIESTRO = E.SINIESTRO
AND E.CODIGO_REASEGURO = 2
LEFT JOIN #SEG_CONTRA_FINAL F
ON A.SSEGURO = F.SSEGURO
AND A.CGARANT = F.CGARANT
AND A.SINIESTRO = F.SINIESTRO
AND F.CODIGO_REASEGURO = 5;



SELECT
    DISTINCT SINIESTRO,
    NTRAMIT,
    SSEGURO,
    RET_DIRECTA,
    RET_74,
    CNT_RET,
    CNT_CED,
    PORC_FACUL,
    PORC_EXE1,
    VALIDADOR,
    SINIESTRO||'_'||NTRAMIT||'_'||SSEGURO AS DUP
INTO #RET_RDY 
FROM #TRAN_TEST
WHERE ROUND(VALIDADOR, 0.01) = 100
AND CGARANT NOT IN (9999,9998)
ORDER BY SINIESTRO DESC;



SELECT 
SINIESTRO,
    NTRAMIT,
    SSEGURO,
    RET_DIRECTA,
    RET_74,
    CNT_RET,
    CNT_CED,
    PORC_FACUL,
    PORC_EXE1,
    VALIDADOR,
    DUP,
ROW_NUMBER() OVER(PARTITION BY DUP ORDER BY SINIESTRO DESC) AS COUNT
INTO #RET_RDY_ROW
FROM #RET_RDY
ORDER BY SINIESTRO DESC;



SELECT
    A.SINIESTRO,
    A.NTRAMIT,
    A.SSEGURO,
    A.RAMO,
    A.CATASTROFE,
    A.CAUSA,
    A.MOTI,
    A.FECHA,
    A.MONEDA,
    A.RESER,
    A.PROVISION_UF,
    A.PROVISION_PS,
    A.DIA,
    A.MES,
    A.ANIO,
    A.FSINIES,
    A.FNOTIFI,
    A.CGARANT,
    A.CLASIFICACION,
    A.NMOVIMI,
    A.NRIESGO,
    A.NPOLIZA,
    A.NCERTIF,
    A.PORC_COASEGURO_RET,
    A.PORC_COASEGURO_CED,
    CASE
        WHEN ROUND(A.VALIDADOR, 0.01) <> 100
        AND B.SINIESTRO IS NOT NULL 
        THEN B.RET_DIRECTA 
        ELSE A.RET_DIRECTA
    END AS RET_DIRECTA,
    CASE
        WHEN ROUND(A.VALIDADOR, 0.01) <> 100
        AND B.SINIESTRO IS NOT NULL 
        THEN B.RET_74 
        ELSE A.RET_74
    END AS RET_74,
    CASE
        WHEN ROUND(A.VALIDADOR, 0.01) <> 100
        AND B.SINIESTRO IS NOT NULL 
        THEN B.CNT_RET 
        ELSE A.CNT_RET
    END AS CNT_RET,
    CASE
        WHEN ROUND(A.VALIDADOR, 0.01) <> 100
        AND B.SINIESTRO IS NOT NULL 
        THEN B.CNT_CED 
        ELSE A.CNT_CED
    END AS CNT_CED,
    CASE
        WHEN ROUND(A.VALIDADOR, 0.01) <> 100
        AND B.SINIESTRO IS NOT NULL 
        THEN B.PORC_FACUL 
        ELSE A.PORC_FACUL
    END AS PORC_FACUL,
    CASE
        WHEN ROUND(A.VALIDADOR, 0.01) <> 100
        AND B.SINIESTRO IS NOT NULL 
        THEN B.PORC_EXE1 
        ELSE A.PORC_EXE1
    END AS PORC_EXE1,
    CASE
        WHEN ROUND(A.VALIDADOR, 0.01) <> 100
        AND B.SINIESTRO IS NOT NULL 
        THEN B.VALIDADOR 
        ELSE A.VALIDADOR
    END AS VALIDADOR
INTO #TRAN1_X
FROM #TRAN_TEST A
LEFT JOIN #RET_RDY_ROW B
ON A.SINIESTRO = B.SINIESTRO
AND A.NTRAMIT = B.NTRAMIT
AND A.SSEGURO = B.SSEGURO
AND B.COUNT = 1;



SELECT
    A.SINIESTRO,
    A.NTRAMIT,
    A.SSEGURO,
    A.RAMO,
    A.CATASTROFE,
    A.CAUSA,
    A.MOTI,
    A.FECHA,
    A.MONEDA,
    A.RESER,
    A.PROVISION_UF,
    A.PROVISION_PS,
    A.DIA,
    A.MES,
    A.ANIO,
    A.FSINIES,
    A.FNOTIFI,
    A.CGARANT,
    A.CLASIFICACION,
    A.NMOVIMI,
    A.NRIESGO,
    A.NPOLIZA,
    A.NCERTIF,
    A.PORC_COASEGURO_RET,
    A.PORC_COASEGURO_CED,
    CASE
        WHEN ROUND(A.VALIDADOR, 0.01) <> 100
        AND B.CIE_NUM_SIN IS NOT NULL 
        THEN B.CIE_POR_RET_DIR 
        ELSE A.RET_DIRECTA
    END AS RET_DIRECTA,
    CASE
        WHEN ROUND(A.VALIDADOR, 0.01) <> 100
        AND B.CIE_NUM_SIN IS NOT NULL 
        THEN B.CIE_POR_RET_74 
        ELSE A.RET_74
    END AS RET_74,
    CASE
        WHEN ROUND(A.VALIDADOR, 0.01) <> 100
        AND B.CIE_NUM_SIN IS NOT NULL 
        THEN B.CIE_CTAPAR_RET 
        ELSE A.CNT_RET
    END AS CNT_RET,
    CASE
        WHEN ROUND(A.VALIDADOR, 0.01) <> 100
        AND B.CIE_NUM_SIN IS NOT NULL 
        THEN B.CIE_CTAPAR_CED 
        ELSE A.CNT_CED
    END AS CNT_CED,
    CASE
        WHEN ROUND(A.VALIDADOR, 0.01) <> 100
        AND B.CIE_NUM_SIN IS NOT NULL 
        THEN B.CIE_POR_FAC 
        ELSE A.PORC_FACUL
    END AS PORC_FACUL,
    CASE
        WHEN ROUND(A.VALIDADOR, 0.01) <> 100
        AND B.CIE_NUM_SIN IS NOT NULL 
        THEN B.CIE_EXE1 
        ELSE A.PORC_EXE1
    END AS PORC_EXE1,
    A.VALIDADOR
INTO #TRAN1
FROM 
    #TRAN1_X A
LEFT JOIN 
    #CONTA_REASG B
ON 
    A.SINIESTRO = B.CIE_NUM_SIN
AND A.NTRAMIT = B.CIE_NTRAMIT
AND A.SSEGURO = B.CIE_SSEGURO
AND A.CGARANT = B.CIE_COD_COB;



UPDATE #TRAN1
SET VALIDADOR = 
    CASE
        WHEN RET_DIRECTA IS NULL 
        THEN 0 
        ELSE RET_DIRECTA
    END + 
    CASE
        WHEN RET_74 IS NULL 
        THEN 0 
        ELSE RET_74
    END + 
    CASE
        WHEN CNT_RET IS NULL 
        THEN 0 
        ELSE CNT_RET
    END + 
    CASE
        WHEN CNT_CED IS NULL 
        THEN 0 
        ELSE CNT_CED
    END + 
    CASE
        WHEN PORC_FACUL IS NULL 
        THEN 0 
        ELSE PORC_FACUL
    END + 
    CASE
        WHEN PORC_EXE1 IS NULL 
        THEN 0 
        ELSE PORC_EXE1
    END;


UPDATE #TRAN1
SET RET_DIRECTA = 100,
    VALIDADOR = 100
WHERE ROUND(VALIDADOR, 0.01) = 0;




SELECT * 
INTO #TRAN2
FROM #TRAN1
WHERE ROUND(VALIDADOR, 0.01) <> 100 ;



SELECT
    A.*,
    ROUND( PROVISION_UF *(
    CASE
        WHEN ( 
                RET_DIRECTA + RET_74 + CNT_RET) 
            > 100 
        THEN 100 
        ELSE RET_DIRECTA + RET_74 + CNT_RET
    END )* PORC_COASEGURO_RET / 10000, 0.001 ) AS PROV_UF_RET,
    ROUND( PROVISION_PS *(
    CASE
        WHEN ( 
                RET_DIRECTA + RET_74 + CNT_RET) 
            > 100 
        THEN 100 
        ELSE RET_DIRECTA + RET_74 + CNT_RET
    END )* PORC_COASEGURO_RET / 10000, 0.001 ) AS PROV_PS_RET,
    ROUND( ( PROVISION_UF - PROVISION_UF *(
    CASE
        WHEN ( 
                RET_DIRECTA + RET_74 + CNT_RET) 
            > 100 
        THEN 100 
        ELSE RET_DIRECTA + RET_74 + CNT_RET
    END )* PORC_COASEGURO_RET / 10000 ), 0.001 ) AS PROV_UF_CED,
    ROUND( ( PROVISION_PS - PROVISION_PS *(
    CASE
        WHEN ( 
                RET_DIRECTA + RET_74 + CNT_RET) 
            > 100 
        THEN 100 
        ELSE RET_DIRECTA + RET_74 + CNT_RET
    END )* PORC_COASEGURO_RET / 10000 ), 0.001 ) AS PROV_PS_CED,
    R.TRAMO                                      AS NOMBRE_RAMO
INTO #PROV_RT
FROM #TRAN1 A
LEFT JOIN cdp_ods.sisaxis_ramos R
ON A.RAMO = R.CRAMO;



UPDATE #PROV_RT
SET 
    RET_DIRECTA = 100,
    PROV_UF_RET = PROVISION_UF,
    PROV_PS_RET = PROVISION_PS,
    PROV_UF_CED = 0,
    PROV_PS_CED = 0
WHERE RET_DIRECTA > 100;




SELECT
    A.*,
    COA.PORC_COASEGURO_RET,
    COA.PORC_COASEGURO_CED,
    CASE
        WHEN C.PCESION IS NULL 
        THEN 0 
        ELSE C.PCESION
    END + 
    CASE
        WHEN C0.PCESION IS NULL 
        THEN 0 
        ELSE C0.PCESION
    END AS RET_DIRECTA,
    CASE
        WHEN D.PCESION IS NULL 
        THEN 0 
        ELSE D.PCESION
    END AS RET_74,
    CASE
        WHEN B.PCESION IS NOT NULL
        AND B.PCUOPAR IS NOT NULL 
        THEN B.PCESION * B.PCUOPAR / 100 
        ELSE 0
    END AS CNT_RET,
    CASE
        WHEN B.PCESION IS NOT NULL
        AND B.PCUOPAR IS NOT NULL 
        THEN B.PCESION *(1 - B.PCUOPAR / 100) 
        ELSE 0
    END AS CNT_CED,
    CASE
        WHEN F.PCESION IS NULL 
        THEN 0 
        ELSE F.PCESION
    END AS PORC_FACUL,
    CASE
        WHEN E.PCESION IS NULL 
        THEN 0 
        ELSE E.PCESION
    END AS PORC_EXE1,
    CASE
        WHEN C.PCESION IS NULL 
        THEN 0 
        ELSE C.PCESION
    END + 
    CASE
        WHEN C0.PCESION IS NULL 
        THEN 0 
        ELSE C0.PCESION
    END + 
    CASE
        WHEN D.PCESION IS NULL 
        THEN 0 
        ELSE D.PCESION
    END + 
    CASE
        WHEN B.PCESION IS NOT NULL
        AND B.PCUOPAR IS NOT NULL 
        THEN B.PCESION * B.PCUOPAR / 100 
        ELSE 0
    END + 
    CASE
        WHEN B.PCESION IS NOT NULL
        AND B.PCUOPAR IS NOT NULL 
        THEN B.PCESION *(1 - B.PCUOPAR / 100) 
        ELSE 0
    END + 
    CASE
        WHEN F.PCESION IS NULL 
        THEN 0 
        ELSE F.PCESION
    END + 
    CASE
        WHEN E.PCESION IS NULL 
        THEN 0 
        ELSE E.PCESION
    END AS VALIDADOR
INTO #TRAN_TEST_B
FROM 
    #RECUPEROS A
LEFT JOIN 
    #COASEGURO COA
ON A.SSEGURO = COA.SSEGURO
LEFT JOIN #SEG_CONTRA_FINAL B
ON A.SSEGURO = B.SSEGURO
AND A.CGARANT = B.CGARANT
AND A.SINIESTRO = B.SINIESTRO
AND B.CODIGO_REASEGURO = 1
LEFT JOIN #SEG_CONTRA_FINAL C0
ON A.SSEGURO = C0.SSEGURO
AND A.CGARANT = C0.CGARANT
AND A.SINIESTRO = C0.SINIESTRO
AND C0.CODIGO_REASEGURO = 0
LEFT JOIN #SEG_CONTRA_FINAL C
ON A.SSEGURO = C.SSEGURO
AND A.CGARANT = C.CGARANT
AND A.SINIESTRO = C.SINIESTRO
AND C.CODIGO_REASEGURO = 16
LEFT JOIN #SEG_CONTRA_FINAL D
ON A.SSEGURO = D.SSEGURO
AND A.CGARANT = D.CGARANT
AND A.SINIESTRO = D.SINIESTRO
AND D.CODIGO_REASEGURO = 17
LEFT JOIN #SEG_CONTRA_FINAL E
ON A.SSEGURO = E.SSEGURO
AND A.CGARANT = E.CGARANT
AND A.SINIESTRO = E.SINIESTRO
AND E.CODIGO_REASEGURO = 2
LEFT JOIN #SEG_CONTRA_FINAL F
ON A.SSEGURO = F.SSEGURO
AND A.CGARANT = F.CGARANT
AND A.SINIESTRO = F.SINIESTRO
AND F.CODIGO_REASEGURO = 5 ;



SELECT
    DISTINCT SINIESTRO,
    NTRAMIT,
    SSEGURO,
    RET_DIRECTA,
    RET_74,
    CNT_RET,
    CNT_CED,
    PORC_FACUL,
    PORC_EXE1,
    VALIDADOR,
    (SINIESTRO||'_'||NTRAMIT||'_'||SSEGURO) AS DUP
INTO #RET_RDY_B
FROM #TRAN_TEST_B
WHERE ROUND(VALIDADOR, 0.01) = 100
AND CGARANT NOT IN (9999, 9998)
ORDER BY SINIESTRO;



SELECT 
SINIESTRO,
    NTRAMIT,
    SSEGURO,
    RET_DIRECTA,
    RET_74,
    CNT_RET,
    CNT_CED,
    PORC_FACUL,
    PORC_EXE1,
    VALIDADOR,
    DUP,
ROW_NUMBER() OVER(PARTITION BY DUP ORDER BY SINIESTRO DESC) AS COUNT    
INTO #RET_RDY_ROW_B 
FROM #RET_RDY_B 
ORDER BY SINIESTRO;



SELECT
    A.SINIESTRO,
    A.NTRAMIT,
    A.SSEGURO,
    A.RAMO,
    A.FECHA,
    A.ESTADO,
    A.MONEDA,
    A.CATASTROFE,
    A.CAUSA,
    A.MOTI,
    A.PAGOS,
    A.PAGOS_UF,
    A.PAGOS_PS,
    A.DIA,
    A.MES,
    A.ANIO,
    A.FNOTIFI,
    A.CGARANT,
    A.CLASIFICACION,
    A.NMOVIMI,
    A.NRIESGO,
    A.NPOLIZA,
    A.NCERTIF,
    A.PORC_COASEGURO_RET,
    A.PORC_COASEGURO_CED,
    CASE
        WHEN ROUND(A.VALIDADOR, 0.01) <> 100
        AND B.SINIESTRO IS NOT NULL 
        THEN B.RET_DIRECTA 
        ELSE A.RET_DIRECTA
    END AS RET_DIRECTA,
    CASE
        WHEN ROUND(A.VALIDADOR, 0.01) <> 100
        AND B.SINIESTRO IS NOT NULL 
        THEN B.RET_74 
        ELSE A.RET_74
    END AS RET_74,
    CASE
        WHEN ROUND(A.VALIDADOR, 0.01) <> 100
        AND B.SINIESTRO IS NOT NULL 
        THEN B.CNT_RET 
        ELSE A.CNT_RET
    END AS CNT_RET,
    CASE
        WHEN ROUND(A.VALIDADOR, 0.01) <> 100
        AND B.SINIESTRO IS NOT NULL 
        THEN B.CNT_CED 
        ELSE A.CNT_CED
    END AS CNT_CED,
    CASE
        WHEN ROUND(A.VALIDADOR, 0.01) <> 100
        AND B.SINIESTRO IS NOT NULL 
        THEN B.PORC_FACUL 
        ELSE A.PORC_FACUL
    END AS PORC_FACUL,
    CASE
        WHEN ROUND(A.VALIDADOR, 0.01) <> 100
        AND B.SINIESTRO IS NOT NULL 
        THEN B.PORC_EXE1 
        ELSE A.PORC_EXE1
    END AS PORC_EXE1,
    CASE
        WHEN ROUND(A.VALIDADOR, 0.01) <> 100
        AND B.SINIESTRO IS NOT NULL 
        THEN B.VALIDADOR 
        ELSE A.VALIDADOR
    END AS VALIDADOR
INTO #TRAN1_X_B
FROM #TRAN_TEST_B A
LEFT JOIN #RET_RDY_ROW_B B
ON A.SINIESTRO = B.SINIESTRO
AND A.NTRAMIT = B.NTRAMIT
AND A.SSEGURO = B.SSEGURO
AND B.COUNT = 1;



SELECT
    A.SINIESTRO,
    A.NTRAMIT,
    A.SSEGURO,
    A.RAMO,
    A.FECHA,
    A.ESTADO,
    A.MONEDA,
    A.CATASTROFE,
    A.CAUSA,
    A.MOTI,
    A.PAGOS,
    A.PAGOS_UF,
    A.PAGOS_PS,
    A.DIA,
    A.MES,
    A.ANIO,
    A.FNOTIFI,
    A.CGARANT,
    A.CLASIFICACION,
    A.NMOVIMI,
    A.NRIESGO,
    A.NPOLIZA,
    A.NCERTIF,
    A.PORC_COASEGURO_RET,
    A.PORC_COASEGURO_CED,
    CASE
        WHEN ROUND(A.VALIDADOR, 0.01) <> 100
        AND B.CIE_NUM_SIN IS NOT NULL 
        THEN B.CIE_POR_RET_DIR 
        ELSE A.RET_DIRECTA
    END AS RET_DIRECTA,
    CASE
        WHEN ROUND(A.VALIDADOR, 0.01) <> 100
        AND B.CIE_NUM_SIN IS NOT NULL 
        THEN B.CIE_POR_RET_74 
        ELSE A.RET_74
    END AS RET_74,
    CASE
        WHEN ROUND(A.VALIDADOR, 0.01) <> 100
        AND B.CIE_NUM_SIN IS NOT NULL 
        THEN B.CIE_CTAPAR_RET 
        ELSE A.CNT_RET
    END AS CNT_RET,
    CASE
        WHEN ROUND(A.VALIDADOR, 0.01) <> 100
        AND B.CIE_NUM_SIN IS NOT NULL 
        THEN B.CIE_CTAPAR_CED 
        ELSE A.CNT_CED
    END AS CNT_CED,
    CASE
        WHEN ROUND(A.VALIDADOR, 0.01) <> 100
        AND B.CIE_NUM_SIN IS NOT NULL 
        THEN B.CIE_POR_FAC 
        ELSE A.PORC_FACUL
    END AS PORC_FACUL,
    CASE
        WHEN ROUND(A.VALIDADOR, 0.01) <> 100
        AND B.CIE_NUM_SIN IS NOT NULL 
        THEN B.CIE_EXE1 
        ELSE A.PORC_EXE1
    END AS PORC_EXE1,
    A.VALIDADOR
INTO #TRAN1_B
FROM 
    #TRAN1_X_B A
LEFT JOIN #CONTA_REASG B
ON A.SINIESTRO = B.CIE_NUM_SIN
AND A.NTRAMIT = B.CIE_NTRAMIT
AND A.SSEGURO = B.CIE_SSEGURO
AND A.CGARANT = B.CIE_COD_COB;



UPDATE #TRAN1_B
SET VALIDADOR = 
    CASE
        WHEN RET_DIRECTA IS NULL 
        THEN 0 
        ELSE RET_DIRECTA
    END + 
    CASE
        WHEN RET_74 IS NULL 
        THEN 0 
        ELSE RET_74
    END + 
    CASE
        WHEN CNT_RET IS NULL 
        THEN 0 
        ELSE CNT_RET
    END + 
    CASE
        WHEN CNT_CED IS NULL 
        THEN 0 
        ELSE CNT_CED
    END + 
    CASE
        WHEN PORC_FACUL IS NULL 
        THEN 0 
        ELSE PORC_FACUL
    END + 
    CASE
        WHEN PORC_EXE1 IS NULL 
        THEN 0 
        ELSE PORC_EXE1
    END;


UPDATE #TRAN1_B
SET RET_DIRECTA = 100,
    VALIDADOR = 100
WHERE ROUND(VALIDADOR,0.01) = 0;



SELECT *
INTO #TRAN2_B
FROM #TRAN1_B
WHERE /*CGARANT NOT IN (9999,9998)*/ ROUND(VALIDADOR,0.01) <> 100;




SELECT
    A.*,
    ROUND( PAGOS_UF *(
    CASE
        WHEN ( 
                RET_DIRECTA + RET_74 + CNT_RET) 
            > 100 
        THEN 100 
        ELSE RET_DIRECTA + RET_74 + CNT_RET
    END )* PORC_COASEGURO_RET / 10000, 0.001 ) AS RECUPERO_UF_RET,
    ROUND( PAGOS_PS *(
    CASE
        WHEN ( 
                RET_DIRECTA + RET_74 + CNT_RET) 
            > 100 
        THEN 100 
        ELSE RET_DIRECTA + RET_74 + CNT_RET
    END )* PORC_COASEGURO_RET / 10000, 0.001 ) AS RECUPERO_PS_RET,
    ROUND( ( PAGOS_UF - PAGOS_UF *(
    CASE
        WHEN ( 
                RET_DIRECTA + RET_74 + CNT_RET) 
            > 100 
        THEN 100 
        ELSE RET_DIRECTA + RET_74 + CNT_RET
    END )* PORC_COASEGURO_RET / 10000 ), 0.001 ) AS RECUPERO_UF_CED,
    ROUND( ( PAGOS_PS - PAGOS_PS *(
    CASE
        WHEN ( 
                RET_DIRECTA + RET_74 + CNT_RET) 
            > 100 
        THEN 100 
        ELSE RET_DIRECTA + RET_74 + CNT_RET
    END )* PORC_COASEGURO_RET / 10000 ), 0.001 ) AS RECUPERO_PS_CED,
    R.TRAMO                                      AS NOMBRE_RAMO
INTO #RECUPERO_RT
FROM #TRAN1_B A
LEFT JOIN cdp_ods.sisaxis_ramos R
ON A.RAMO = R.CRAMO;



UPDATE  #RECUPERO_RT
SET 
    RET_DIRECTA = 100,
    RECUPERO_UF_RET = PAGOS_UF,
    RECUPERO_PS_RET = PAGOS_PS,
    RECUPERO_UF_CED = 0,
    RECUPERO_PS_CED = 0
WHERE RET_DIRECTA > 100;


SELECT
    A.*,
    COA.PORC_COASEGURO_RET,
    COA.PORC_COASEGURO_CED,
    CASE
        WHEN C.PCESION IS NULL 
        THEN 0 
        ELSE C.PCESION
    END + 
    CASE
        WHEN C0.PCESION IS NULL 
        THEN 0 
        ELSE C0.PCESION
    END AS RET_DIRECTA,
    CASE
        WHEN D.PCESION IS NULL 
        THEN 0 
        ELSE D.PCESION
    END AS RET_74,
    CASE
        WHEN B.PCESION IS NOT NULL
        AND B.PCUOPAR IS NOT NULL 
        THEN B.PCESION * B.PCUOPAR / 100 
        ELSE 0
    END AS CNT_RET,
    CASE
        WHEN B.PCESION IS NOT NULL
        AND B.PCUOPAR IS NOT NULL 
        THEN B.PCESION *(1 - B.PCUOPAR / 100) 
        ELSE 0
    END AS CNT_CED,
    CASE
        WHEN F.PCESION IS NULL 
        THEN 0 
        ELSE F.PCESION
    END AS PORC_FACUL,
    CASE
        WHEN E.PCESION IS NULL 
        THEN 0 
        ELSE E.PCESION
    END AS PORC_EXE1,
    CASE
        WHEN C.PCESION IS NULL 
        THEN 0 
        ELSE C.PCESION
    END + 
    CASE
        WHEN C0.PCESION IS NULL 
        THEN 0 
        ELSE C0.PCESION
    END + 
    CASE
        WHEN D.PCESION IS NULL 
        THEN 0 
        ELSE D.PCESION
    END + 
    CASE
        WHEN B.PCESION IS NOT NULL
        AND B.PCUOPAR IS NOT NULL 
        THEN B.PCESION * B.PCUOPAR / 100 
        ELSE 0
    END + 
    CASE
        WHEN B.PCESION IS NOT NULL
        AND B.PCUOPAR IS NOT NULL 
        THEN B.PCESION *(1 - B.PCUOPAR / 100) 
        ELSE 0
    END + 
    CASE
        WHEN F.PCESION IS NULL 
        THEN 0 
        ELSE F.PCESION
    END + 
    CASE
        WHEN E.PCESION IS NULL 
        THEN 0 
        ELSE E.PCESION
    END AS VALIDADOR
INTO #TRAN_TEST_C
FROM #PAGOS A
LEFT JOIN #COASEGURO COA 
ON A.SSEGURO = COA.SSEGURO
LEFT JOIN #SEG_CONTRA_FINAL B
ON A.SSEGURO = B.SSEGURO
AND A.CGARANT = B.CGARANT
AND A.SINIESTRO = B.SINIESTRO
AND B.CODIGO_REASEGURO = 1
LEFT JOIN #SEG_CONTRA_FINAL C0
ON A.SSEGURO = C0.SSEGURO
AND A.CGARANT = C0.CGARANT
AND A.SINIESTRO = C0.SINIESTRO
AND C0.CODIGO_REASEGURO = 0
LEFT JOIN #SEG_CONTRA_FINAL C 
ON A.SSEGURO = C.SSEGURO
AND A.CGARANT = C.CGARANT
AND A.SINIESTRO = C.SINIESTRO
AND C.CODIGO_REASEGURO = 16
LEFT JOIN #SEG_CONTRA_FINAL D
ON A.SSEGURO = D.SSEGURO
AND A.CGARANT = D.CGARANT
AND A.SINIESTRO = D.SINIESTRO
AND D.CODIGO_REASEGURO = 17
LEFT JOIN #SEG_CONTRA_FINAL E
ON A.SSEGURO = E.SSEGURO
AND A.CGARANT = E.CGARANT
AND A.SINIESTRO = E.SINIESTRO
AND E.CODIGO_REASEGURO = 2
LEFT JOIN #SEG_CONTRA_FINAL F
ON A.SSEGURO = F.SSEGURO
AND A.CGARANT = F.CGARANT
AND A.SINIESTRO = F.SINIESTRO
AND F.CODIGO_REASEGURO = 5 ;



SELECT
    DISTINCT SINIESTRO,
    NTRAMIT,
    SSEGURO,
    RET_DIRECTA,
    RET_74,
    CNT_RET,
    CNT_CED,
    PORC_FACUL,
    PORC_EXE1,
    VALIDADOR,
    SINIESTRO||'_'||NTRAMIT||'_'||SSEGURO AS DUP
INTO #RET_RDY_C
FROM #TRAN_TEST_C
WHERE ROUND(VALIDADOR, 0.01) = 100
AND CGARANT NOT IN (9999,9998)
ORDER BY SINIESTRO DESC; 


SELECT SINIESTRO,
    NTRAMIT,
    SSEGURO,
    RET_DIRECTA,
    RET_74,
    CNT_RET,
    CNT_CED,
    PORC_FACUL,
    PORC_EXE1,
    VALIDADOR,
    DUP,
ROW_NUMBER() OVER(PARTITION BY DUP ORDER BY SINIESTRO DESC) AS COUNT    
INTO #RET_RDY_ROW_C 
FROM #RET_RDY_C  
ORDER BY SINIESTRO DESC;


SELECT
    A.SINIESTRO,
    A.NTRAMIT,
    A.SSEGURO,
    A.RAMO,
    A.FECHA,
    A.ESTADO,
    A.MONEDA,
    A.CATASTROFE,
    A.CAUSA,
    A.MOTI,
    A.PAGOS,
    A.PAGOS_UF,
    A.PAGOS_PS,
    A.UF,
    A.DOLAR,
    A.FNOTIFI,
    A.CGARANT,
    A.SIDEPAG,
    A.CLASIFICACION,
    A.NMOVIMI,
    A.NRIESGO,
    A.NPOLIZA,
    A.NCERTIF,
    A.PORC_COASEGURO_RET,
    A.PORC_COASEGURO_CED,
    CASE
        WHEN ROUND(A.VALIDADOR, 0.01) <> 100
        AND B.SINIESTRO IS NOT NULL 
        THEN B.RET_DIRECTA 
        ELSE A.RET_DIRECTA
    END AS RET_DIRECTA,
    CASE
        WHEN ROUND(A.VALIDADOR, 0.01) <> 100
        AND B.SINIESTRO IS NOT NULL 
        THEN B.RET_74 
        ELSE A.RET_74
    END AS RET_74,
    CASE
        WHEN ROUND(A.VALIDADOR, 0.01) <> 100
        AND B.SINIESTRO IS NOT NULL 
        THEN B.CNT_RET 
        ELSE A.CNT_RET
    END AS CNT_RET,
    CASE
        WHEN ROUND(A.VALIDADOR, 0.01) <> 100
        AND B.SINIESTRO IS NOT NULL 
        THEN B.CNT_CED 
        ELSE A.CNT_CED
    END AS CNT_CED,
    CASE
        WHEN ROUND(A.VALIDADOR, 0.01) <> 100
        AND B.SINIESTRO IS NOT NULL 
        THEN B.PORC_FACUL 
        ELSE A.PORC_FACUL
    END AS PORC_FACUL,
    CASE
        WHEN ROUND(A.VALIDADOR, 0.01) <> 100
        AND B.SINIESTRO IS NOT NULL 
        THEN B.PORC_EXE1 
        ELSE A.PORC_EXE1
    END AS PORC_EXE1,
    CASE
        WHEN ROUND(A.VALIDADOR, 0.01) <> 100
        AND B.SINIESTRO IS NOT NULL 
        THEN B.VALIDADOR 
        ELSE A.VALIDADOR
    END AS VALIDADOR
INTO #TRAN1_X_C
FROM #TRAN_TEST_C A
LEFT JOIN #RET_RDY_ROW_C B
ON A.SINIESTRO = B.SINIESTRO
AND A.NTRAMIT = B.NTRAMIT
AND A.SSEGURO = B.SSEGURO
AND B.COUNT = 1 ;


SELECT
    A.SINIESTRO,
    A.NTRAMIT,
    A.SSEGURO,
    A.RAMO,
    A.FECHA,
    A.ESTADO,
    A.MONEDA,
    A.CATASTROFE,
    A.CAUSA,
    A.MOTI,
    A.PAGOS,
    A.PAGOS_UF,
    A.PAGOS_PS,
    A.UF,
    A.DOLAR,
    A.FNOTIFI,
    A.CGARANT,
    A.SIDEPAG,
    A.CLASIFICACION,
    A.NMOVIMI,
    A.NRIESGO,
    A.NPOLIZA,
    A.NCERTIF,
    A.PORC_COASEGURO_RET,
    A.PORC_COASEGURO_CED,
    CASE
        WHEN ROUND(A.VALIDADOR, 0.01) <> 100
        AND B.CIE_NUM_SIN IS NOT NULL 
        THEN B.CIE_POR_RET_DIR 
        ELSE A.RET_DIRECTA
    END AS RET_DIRECTA,
    CASE
        WHEN ROUND(A.VALIDADOR, 0.01) <> 100
        AND B.CIE_NUM_SIN IS NOT NULL 
        THEN B.CIE_POR_RET_74 
        ELSE A.RET_74
    END AS RET_74,
    CASE
        WHEN ROUND(A.VALIDADOR, 0.01) <> 100
        AND B.CIE_NUM_SIN IS NOT NULL 
        THEN B.CIE_CTAPAR_RET 
        ELSE A.CNT_RET
    END AS CNT_RET,
    CASE
        WHEN ROUND(A.VALIDADOR, 0.01) <> 100
        AND B.CIE_NUM_SIN IS NOT NULL 
        THEN B.CIE_CTAPAR_CED 
        ELSE A.CNT_CED
    END AS CNT_CED,
    CASE
        WHEN ROUND(A.VALIDADOR, 0.01) <> 100
        AND B.CIE_NUM_SIN IS NOT NULL 
        THEN B.CIE_POR_FAC 
        ELSE A.PORC_FACUL
    END AS PORC_FACUL,
    CASE
        WHEN ROUND(A.VALIDADOR, 0.01) <> 100
        AND B.CIE_NUM_SIN IS NOT NULL 
        THEN B.CIE_EXE1 
        ELSE A.PORC_EXE1
    END AS PORC_EXE1,
    A.VALIDADOR
INTO #TRAN1_C
FROM #TRAN1_X_C A
LEFT JOIN #CONTA_REASG B
ON A.SINIESTRO = B.CIE_NUM_SIN
AND A.NTRAMIT = B.CIE_NTRAMIT
AND A.SSEGURO = B.CIE_SSEGURO
AND A.CGARANT = B.CIE_COD_COB;


UPDATE  #TRAN1_C
SET 
    VALIDADOR = 
    CASE
        WHEN RET_DIRECTA IS NULL 
        THEN 0 
        ELSE RET_DIRECTA
    END + 
    CASE
        WHEN RET_74 IS NULL 
        THEN 0 
        ELSE RET_74
    END + 
    CASE
        WHEN CNT_RET IS NULL 
        THEN 0 
        ELSE CNT_RET
    END + 
    CASE
        WHEN CNT_CED IS NULL 
        THEN 0 
        ELSE CNT_CED
    END + 
    CASE
        WHEN PORC_FACUL IS NULL 
        THEN 0 
        ELSE PORC_FACUL
    END + 
    CASE
        WHEN PORC_EXE1 IS NULL 
        THEN 0 
        ELSE PORC_EXE1
    END;


UPDATE #TRAN1_C
SET RET_DIRECTA = 100,
    VALIDADOR = 100
WHERE ROUND(VALIDADOR, 0.01) = 0;


SELECT *
INTO #TRAN2_C
FROM #TRAN1_C
WHERE ROUND(VALIDADOR, 0.01) <> 100;


SELECT
    A.*,
    ROUND( PAGOS_UF *(
    CASE
        WHEN ( 
                RET_DIRECTA + RET_74 + CNT_RET) 
            > 100 
        THEN 100 
        ELSE RET_DIRECTA + RET_74 + CNT_RET
    END )* PORC_COASEGURO_RET / 10000, 0.001 ) AS PAGOS_UF_RET,
    ROUND( PAGOS_PS *(
    CASE
        WHEN ( 
                RET_DIRECTA + RET_74 + CNT_RET) 
            > 100 
        THEN 100 
        ELSE RET_DIRECTA + RET_74 + CNT_RET
    END )* PORC_COASEGURO_RET / 10000, 0.001 ) AS PAGOS_PS_RET,
    ROUND( ( PAGOS_UF - PAGOS_UF *(
    CASE
        WHEN ( 
                RET_DIRECTA + RET_74 + CNT_RET) 
            > 100 
        THEN 100 
        ELSE RET_DIRECTA + RET_74 + CNT_RET
    END )* PORC_COASEGURO_RET / 10000 ), 0.001 ) AS PAGOS_UF_CED,
    ROUND( ( PAGOS_PS - PAGOS_PS *(
    CASE
        WHEN ( 
                RET_DIRECTA + RET_74 + CNT_RET) 
            > 100 
        THEN 100 
        ELSE RET_DIRECTA + RET_74 + CNT_RET
    END )* PORC_COASEGURO_RET / 10000 ), 0.001 ) AS PAGOS_PS_CED,
    R.TRAMO                                      AS NOMBRE_RAMO
INTO #PAGOS_RT
FROM #TRAN1_C A
LEFT JOIN cdp_ods.sisaxis_ramos R
ON A.RAMO = R.CRAMO;


UPDATE #PAGOS_RT
SET 
    RET_DIRECTA = 100,
    PAGOS_UF_RET = PAGOS_UF,
    PAGOS_PS_RET = PAGOS_PS,
    PAGOS_UF_CED = 0,
    PAGOS_PS_CED = 0
WHERE RET_DIRECTA > 100; 


SELECT
    MAX(CIE_PER_CON) AS PER
INTO #MAX_F_CONTA
FROM 
    cdp_ods.siscierres_sin_ciemen_tbl
WHERE CIE_PER_CON <= 20220429
AND CIE_TIP_PRO IN (1, 2, 3) ;



SELECT *
INTO #CONTA_HOY
from cdp_ods.siscierres_sin_ciemen_tbl
where cie_per_con = 20220429
and cie_tip_pro in (1,2,3);



SELECT
    *,
    ROUND(CIE_MTO_PS / 32176.49 , 0.01)                                      AS MONTO_UF,
    ( CIE_POR_RET_DIR::int + CIE_POR_RET_74::int + CIE_CTAPAR_RET::int )/ 100 * CIE_MTO_PS         AS MONTO_PS_RET,
    ( CIE_POR_RET_DIR::int + CIE_POR_RET_74::int + CIE_CTAPAR_RET::int)/ 100 * CIE_MTO_PS / 32176.49 AS MONTO_UF_RET
INTO #FEB
FROM cdp_ods.siscierres_sin_ciemen_tbl
WHERE CIE_PER_CON = 20220429
AND CIE_TIP_PRO IN (1,2,3);

-------------------------------------------------------------------
--
--SELECT
--    MAX(CIE_PER_CON) AS PER
--INTO #MAX_F_CONTA
--FROM 
--    cdp_ods.siscierres_sin_ciemen_tbl
--WHERE CIE_PER_CON <= $${IFinal_mes_anterior}$$ 
--AND CIE_TIP_PRO IN (1, 2, 3) ;
--
--
--
--SELECT *
--INTO #CONTA_HOY
--from cdp_ods.siscierres_sin_ciemen_tbl
--where cie_per_con = $${IFinal_mes_Contable}$$
--and cie_tip_pro in (1,2,3);
--
--
--
--SELECT
--    *,
--    ROUND(CIE_MTO_PS / $${DValor_UF}$$ , 0.01)                                      AS MONTO_UF,
--    ( CIE_POR_RET_DIR::int + CIE_POR_RET_74::int + CIE_CTAPAR_RET::int )/ 100 * CIE_MTO_PS         AS MONTO_PS_RET,
--    ( CIE_POR_RET_DIR::int + CIE_POR_RET_74::int + CIE_CTAPAR_RET::int)/ 100 * CIE_MTO_PS /$${DValor_UF}$$ AS MONTO_UF_RET
--INTO #FEB
--FROM cdp_ods.siscierres_sin_ciemen_tbl
--WHERE CIE_PER_CON = $${IFinal_mes_Contable}$$
--AND CIE_TIP_PRO IN (1,2,3);

SELECT t1.CIE_NOM_RAM, 
      /* SUM_of_CIE_MTO_PS */
(SUM(t1.CIE_MTO_PS)) AS SUM_of_CIE_MTO_PS, 
          /* SUM_of_MONTO_UF */
(SUM(t1.MONTO_UF)) AS SUM_of_MONTO_UF, 
          /* SUM_of_MONTO_PS_RET */
(SUM(t1.MONTO_PS_RET)) AS SUM_of_MONTO_PS_RET, 
          /* SUM_of_MONTO_UF_RET */
(SUM(t1.MONTO_UF_RET)) AS SUM_of_MONTO_UF_RET, 
t1.CIE_NOM_PRO
INTO #QUERY_FOR_FEB
FROM #FEB t1
WHERE t1.CIE_TIP_PRO = 3
GROUP BY t1.CIE_NOM_RAM,
t1.CIE_NOM_PRO
ORDER BY t1.CIE_NOM_PRO;

SELECT
    DISTINCT SINIESTRO::INT,
    NOMBRE_RAMO,
    CLASIFICACION
INTO #T_NUEVO_X
FROM  #PROV_RT
WHERE CLASIFICACION = 'NUEVO'
UNION
SELECT
    DISTINCT SINIESTRO::INT,
    NOMBRE_RAMO,
    CLASIFICACION
FROM  #PAGOS_RT
WHERE CLASIFICACION = 'NUEVO' ;


SELECT
    DISTINCT SINIESTRO::INT,
    NOMBRE_RAMO,
    CLASIFICACION
INTO #T_NUEVO
FROM #T_NUEVO_X;



SELECT
    DISTINCT SINIESTRO::INT,
    NOMBRE_RAMO,
    CLASIFICACION
INTO #T_AJUSTE_X
FROM #PROV_RT
WHERE
    CLASIFICACION <> 'NUEVO'
UNION
SELECT
    DISTINCT SINIESTRO::INT,
    NOMBRE_RAMO,
    CLASIFICACION
FROM  #PAGOS_RT
WHERE CLASIFICACION <> 'NUEVO' ;



SELECT
    DISTINCT SINIESTRO::INT,
    NOMBRE_RAMO,
    CLASIFICACION
INTO #T_AJUSTE
FROM #T_AJUSTE_X ;


SELECT
    DISTINCT SINIESTRO::INT,
    NOMBRE_RAMO,
    CLASIFICACION
INTO #T_PAGOS
FROM #PAGOS_RT;



SELECT
    DISTINCT SINIESTRO::INT,
    NOMBRE_RAMO,
    CLASIFICACION
INTO #T_REC
FROM #RECUPERO_RT


SELECT
    SINIESTRO::INT,
    NTRAMIT,
    RAMO,
    CGARANT,
    FNOTIFI,
    CLASIFICACION,
    MONEDA,
    RESER,
    PROVISION_UF,
    PROVISION_PS,
    'PROVISION' AS MOVIMIENTO
INTO #PROV_ACT
FROM #PROV_FINAL;


SELECT
    SINIESTRO::INT,
    NTRAMIT,
    RAMO,
    CGARANT,
    FNOTIFI,
    CLASIFICACION,
    MONEDA,
    PAGOS,
    PAGOS_UF,
    PAGOS_PS,
    'PAGO' AS MOVIMIENTO
INTO #PAG_ACT
FROM #PAGOS ;



SELECT *
INTO #MES_ACT_X
FROM #PROV_ACT;


INSERT INTO  #MES_ACT_X
SELECT * FROM #PAG_ACT;


SELECT
    SINIESTRO::INT,
    NTRAMIT,
    RAMO,
    CGARANT,
    FNOTIFI,
    CLASIFICACION,
    MOVIMIENTO,
    MONEDA,
    SUM(RESER)        AS MONTO,
    SUM(PROVISION_UF) AS MONTO_UF,
    SUM(PROVISION_PS) AS MONTO_PS
INTO #MES_ACT
FROM #MES_ACT_X
GROUP BY 1,2,3,4,5,6,7,8;



SELECT
    CIE_NUM_SIN,
    CIE_NTRAMIT,
    CIE_CRAMO,
    CIE_COD_COB,
    CIE_FNOTIFI,
    CIE_MON_SEG,
    SUM(CIE_MTO_MO)                          AS MTO_MO,
    ROUND( SUM(CIE_MTO_PS)/ 30088.37, 0.01 ) AS MTO_UF,
    SUM(CIE_MTO_PS)                          AS MTO_PS
INTO #PROV_ANT
FROM #FEB
WHERE CIE_TIP_PRO = 3
GROUP BY 1, 2, 3, 4, 5, 6 ;




SELECT
    SINIESTRO::INT,
    NTRAMIT,
    RAMO,
    CGARANT,
    MONEDA
INTO #SN_MAS_X
FROM 
    #MES_ACT; 


    
INSERT INTO 
    #SN_MAS_X
SELECT
    CIE_NUM_SIN,
    CIE_NTRAMIT,
    CIE_CRAMO,
    CIE_COD_COB,
    CIE_MON_SEG
FROM #PROV_ANT ;



SELECT
    DISTINCT SINIESTRO::INT,
    NTRAMIT,
    RAMO,
    CGARANT,
    MONEDA
INTO #SN_MAS
FROM #SN_MAS_X;



SELECT
    DISTINCT A.SINIESTRO::INT,
    A.NTRAMIT,
    A.CGARANT,
    MAX(B.NMOVIMI) AS NMOVIMI
INTO #MX_MOV_RS
FROM 
    #SN_MAS A
LEFT JOIN 
    cdp_ods.sisaxis_reservasinitrami B
ON A.SINIESTRO::INT = B.NSINIES::INT
AND A.NTRAMIT = B.NTRAMIT
AND A.CGARANT = B.CGARANT
GROUP BY 1, 2, 3  ;


SELECT
    B.*
INTO #MOV_RESERVA
FROM 
    #MX_MOV_RS A
LEFT JOIN 
    cdp_ods.sisaxis_reservasinitrami B
ON A.SINIESTRO::INT = B.NSINIES::INT
AND A.NTRAMIT = B.NTRAMIT
AND A.CGARANT = B.CGARANT
AND A.NMOVIMI = B.NMOVIMI ;


SELECT
    A.SINIESTRO::INT,
    A.NTRAMIT,
    A.RAMO,
    A.CGARANT,
    A.MONEDA,
    ROUND(
    CASE
        WHEN B.MONTO IS NULL 
        THEN 0 
        ELSE B.MONTO
    END + 
    CASE
        WHEN C.MONTO IS NULL 
        THEN 0 
        ELSE C.MONTO
    END - 
    CASE
        WHEN D.MTO_MO IS NULL 
        THEN 0 
        ELSE D.MTO_MO
    END, 0.01 ) AS DELTA_MO,
    ROUND(
    CASE
        WHEN B.MONTO_PS IS NULL 
        THEN 0 
        ELSE B.MONTO_PS
    END + 
    CASE
        WHEN C.MONTO_PS IS NULL 
        THEN 0 
        ELSE C.MONTO_PS
    END - 
    CASE
        WHEN D.MTO_PS IS NULL 
        THEN 0 
        ELSE D.MTO_PS
    END, 0.01 ) AS DELTA_PS,
    CASE
        WHEN B.MONTO_PS IS NULL 
        THEN 0 
        ELSE B.MONTO_PS
    END AS PROV,
    CASE
        WHEN C.MONTO_PS IS NULL 
        THEN 0 
        ELSE C.MONTO_PS
    END AS PAGO,
    CASE
        WHEN D.MTO_PS IS NULL 
        THEN 0 
        ELSE D.MTO_PS
    END         AS PROV_ANT,
    (S.FNOTIFI) AS FECHA_DENUNCIO,
    CASE
        WHEN ( 
                S.FNOTIFI) 
            BETWEEN $${SFecha_Inicial}$$ AND $${SFecha_Final}$$
        THEN 'NUEVO' 
        ELSE 'CARTERA'
    END     AS CLASIFICACION,
    R.TRAMO AS NOMBRE_RAMO,
    CASE
        WHEN TRUNC(MR.FRESFIN) IS NULL 
        THEN TRUNC(MR.FMOVIMI) 
        ELSE TRUNC(MR.FRESFIN)
    END AS FECHA_MOVIMIENTO
INTO #D_PROV_PAG
FROM #SN_MAS A
LEFT JOIN #MES_ACT B
ON A.SINIESTRO::INT = B.SINIESTRO::INT
AND A.NTRAMIT = B.NTRAMIT
AND A.CGARANT = B.CGARANT
AND A.MONEDA = B.MONEDA
AND B.MOVIMIENTO = 'PROVISION'
LEFT JOIN #MES_ACT C
ON A.SINIESTRO::INT = C.SINIESTRO::INT
AND A.NTRAMIT = C.NTRAMIT
AND A.CGARANT = C.CGARANT
AND A.MONEDA = C.MONEDA
AND C.MOVIMIENTO = 'PAGO'
LEFT JOIN #PROV_ANT D
ON A.SINIESTRO::INT = D.CIE_NUM_SIN::INT
AND A.NTRAMIT = D.CIE_NTRAMIT
AND A.CGARANT = D.CIE_COD_COB
AND A.MONEDA = D.CIE_MON_SEG
LEFT JOIN CDP_ODS.SISAXIS_SINIESTROS S
ON A.SINIESTRO::INT = S.NSINIES::INT
LEFT JOIN cdp_ods.sisaxis_ramos R
ON A.RAMO = R.CRAMO
LEFT JOIN #MOV_RESERVA MR
ON A.SINIESTRO::INT = MR.NSINIES::INT
AND A.NTRAMIT = MR.NTRAMIT
AND A.CGARANT = MR.CGARANT ;


SELECT
    NSINIES          AS SINIESTRO,
    B.CRAMO          AS COD_RAMO,
    C.TRAMO          AS RAMO,
    TRUNC(A.FNOTIFI) AS FECHA_DENUNCIO
INTO #SN_NUEVOS
FROM cdp_ods.sisaxis_siniestros A
LEFT JOIN cdp_ods.sisaxis_seguros B
ON A.SSEGURO = B.SSEGURO
LEFT JOIN CDP_ODS.SISAXIS_RAMOS C
ON C.CRAMO = B.CRAMO
WHERE TRUNC(A.FNOTIFI) BETWEEN $${SFecha_Inicial}$$ AND $${SFecha_Final}$$



/* 
Developed By:

https://github.com/metalhead13

*/